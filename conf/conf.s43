;----------------------------------------------------------------------------------------------
#include "msp430g2553.h"
#include "../util/constants.h"
;----------------------------------------------------------------------------------------------
        NAME   CONF
        PUBLIC CONF_SERIAL_MSP430G2553,CLEAR_DATA_MEM,VER_TP_COMAND
        RSEG   CODE           
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
CONF_SERIAL_MSP430G2553 ; INVOCA AS ROTINAS DE CONFIGURAÇÃO DA COMUNICAÇÃO UART DO mCU
;----------------------------------------------------------------------------------------------
        mov.w        #00000h,R4
        call         #VER_MEM
        cmp.w        #NON_OPERATING,R4
        jnz          CONTINUE_CONFIG
        jmp          EXIT_CONF
CONTINUE_CONFIG:        
        call         #CONF_CLOCK_DEFAULT
        call         #CONF_PORT_SEL
        call         #CONFIG_UART
EXIT_CONF:
        ret
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
CONF_CLOCK_DEFAULT ; VALOR DEFAULT DE CONFIGURAÇÃO DE CLOCK
;----------------------------------------------------------------------------------------------
        mov.b       #00087h,&BCSCTL1
        mov.b       #00076h,&DCOCTL
        ret
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
CONF_PORT_SEL
;----------------------------------------------------------------------------------------------
        bis.b       #BIT1+BIT2,&P1SEL
        bis.b       #BIT1+BIT2,&P1SEL2
        ret 
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
CONFIG_UART
;----------------------------------------------------------------------------------------------
        mov.b       #00081h,&UCA0CTL1
        mov.b       #00068h,&UCA0BR0
        mov.b       #0h,&UCA0BR1
        mov.b       #00002h,&UCA0MCTL
        bic.b       #UCSWRST,&UCA0CTL1 ;RESET PARA INICIALIZAÇÃO
__INI_: bis.b       #UCA0RXIE,&IE2
        bis.b       #UCA0TXIE,&IE2
        bic.b       #UCA0RXIFG,&IFG2
        bic.b       #UCA0TXIFG,&IFG2           
        ret  
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
VER_MEM ; VERIFICA SE O RANGE DA MEMÓRIA QUE NECESSITA SER UTILIZADO ESTA EM USO.
        ; CASO ESTEJA SENDO UTILIZADO DEVERÁ RETORNAR NO REGISTRADOR R4 O VALOR #01010h
        ; OQ INDICA ERRO E NÃO POSSIBILITA A UTILIZAÇÃO DAS ROTINAS DO PACOTE.
        ; R5 IRA CONTER O ENDERECO DE MEMORIA QUE ESTA CORROMPIDO
;----------------------------------------------------------------------------------------------
             push         R7
             push         R8
             mov.w        #00000h,R7
             mov.w        #00000h,R8
INIT_RANGE:  mov.w        #00203h,R7
PVER:        mov.b        @R7,R8                  
             tst          R8
             jeq          CONTINUE
STOP_ERR:    mov.w        #NON_OPERATING,R4
             mov.w        R7,R5
             jmp          EXIT_VER_MEM 
CONTINUE:    cmp.w        #00228h,R7
             jnz          INCOK           
             jmp          EXIT_VER_MEM  
INCOK:       inc          R7
             jmp          PVER
EXIT_VER_MEM:
             pop          R8
             pop          R7
       ret
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
CLEAR_DATA_MEM
;----------------------------------------------------------------------------------------------
       mov.b             #000h,DATA_LIMIT_IN
       mov.b             #000h,DATA_BUFFER_RX_COUNT
       mov.b             #000h,DATA_VER_HARDWARE
       mov.b             #000h,DATA_CONFIG_AT
       mov.b             #000h,DATA_ORDER_SOLIC
       mov.b             #000h,DATA1_IN 
       mov.b             #000h,DATA2_IN
       mov.b             #000h,DATA3_IN
       mov.b             #000h,DATA4_IN
       mov.b             #000h,DATA5_IN
       mov.b             #000h,DATA6_IN
       mov.b             #000h,DATA7_IN
       mov.b             #000h,DATA8_IN
       mov.b             #000h,DATA9_IN
       mov.b             #000h,DATA10_IN
       mov.b             #000h,DATA11_IN
       mov.b             #000h,DATA12_IN
       mov.b             #000h,DATA13_IN
       mov.b             #000h,DATA14_IN
       mov.b             #000h,DATA15_IN
       mov.b             #000h,DATA16_IN
       mov.b             #000h,DATA17_IN
       mov.b             #000h,DATA18_IN
       mov.b             #000h,DATA19_IN
       mov.b             #000h,DATA20_IN
       mov.b             #000h,DATA21_IN
       mov.b             #000h,DATA22_IN
       mov.b             #000h,DATA23_IN
       mov.b             #000h,DATA24_IN
       mov.b             #000h,DATA25_IN
       mov.b             #000h,DATA26_IN
       mov.b             #000h,DATA27_IN
       mov.b             #000h,DATA28_IN
       mov.b             #000h,DATA29_IN
       mov.b             #000h,DATA30_IN
       mov.b             #000h,DATA31_IN
       mov.b             #000h,DATA32_IN
       mov.b             #000h,DATA33_IN
       ret
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
VER_TP_COMAND    ; SE NÃO FOR INFORMADO PELO USUARIO O TIPO DE COMANDO O SOFTWARE ADEQUA PARA
                 ; A CONFIGURAÇÃO PADRÃO. CASO INFORME VALORES NÃO EXISTENTES O SOFTWARE TAMBÉM
                 ; CONFIGURA O VALOR PADRÃO
;----------------------------------------------------------------------------------------------
       push             DATA_BUFFER
       mov.b            #COMANDO_AT1,DATA_BUFFER
       tst.b            DATA_CONFIG_AT
       jz               DEF1
DEF_V: cmp.b            DATA_CONFIG_AT,DATA_BUFFER
       jz               DEF1O                            
VERD2: mov.b            #COMANDO_AT2,DATA_BUFFER
       cmp.b            DATA_CONFIG_AT,DATA_BUFFER
       jnz              DEF1
DEF2O: nop
DEF1O: jmp              EXIT_VER 
DEF1:  mov.b            #COMANDO_AT1,DATA_CONFIG_AT        
EXIT_VER:
       pop              DATA_BUFFER
       ret  
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
        END  
;----------------------------------------------------------------------------------------------